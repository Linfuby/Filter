<?php
namespace Meling\Filter\Lists\Fields\Categories;

/**
 * Class Category
 * @package Meling\Filter\Lists\Fields\Categories
 */
class Category extends \Meling\Filter\Lists\Fields\Many
{
    /**
     * @var \Meling\Filter\Lists\Fields\Types\Type[]
     */
    protected $types = array();

    /**
     * @var
     */
    private $sex;

    /**
     * Many constructor.
     * @param string                          $id
     * @param string                          $name
     * @param \Meling\Filter\Lists\Fields\One $sex
     * @param bool                            $checked
     */
    public function __construct($id, $name, $sex, $checked = false)
    {
        parent::__construct($id, $name, $checked); // TODO: Change the autogenerated stub
        $this->sex = $sex;
    }

    /**
     * @param \Meling\Filter\Lists\Fields\Types\Type $type
     */
    public function addType($type)
    {
        $this->types[$type->name()] = $type;
    }

    public function clearTypes()
    {
        $this->types = array();
    }

    public function sex()
    {
        return $this->sex;
    }

    /**
     * @param bool $checked
     * @param bool $ignoreChecked
     * @return \Meling\Filter\Lists\Fields\Types\Type[]
     */
    public function types($checked = false, $ignoreChecked = false)
    {
        if($checked) {
            $types = array();
            foreach($this->types as $type) {
                if($type->checked()) {
                    $types[$type->name()] = $type;
                }
            }
            if($ignoreChecked) {
                if($types) {
                    return $types;
                }
            } else {
                return $types;
            }
        }

        return $this->types;
    }

}
